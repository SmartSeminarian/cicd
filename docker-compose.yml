version: '3.9'
services:
  assistant:
    container_name: assistant
    build:
      context: ./assistant/
      dockerfile: ./Dockerfile
    env_file:
      - ./.env
    command: python3 basic-assistant.py
    volumes:
      - ./assistant:/code

  postgres:
    container_name: pgvector
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: vectordb    
      POSTGRES_USER: testuser    
      POSTGRES_PASSWORD: testpwd          
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - ./pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d vectordb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

    # service:
    #     container_name: $CONTAINER_NAME
    #     image: krinkin/$SERVICE_NAME:$BRANCH

    #     ports:
    #         - "5000"
    #     env_file:
    #         - ./.env
    #     volumes:
    #         - $CONTAINER_DATA:/data
    #         - $VERSION_FILE:/VERSION:ro
    #         - ./app:/app:ro

    # tunnel:
    #     container_name:  ${CONTAINER_NAME}_tunnel
    #     depends_on:
    #         -   service
    #     env_file:
    #         - ./.env
    #     image: cloudflare/cloudflared:latest
    #     command: [ "tunnel",
    #                "--no-autoupdate",
    #                "run",
    #                "--token",
    #                "$CF_TOKEN"
    #     ]
